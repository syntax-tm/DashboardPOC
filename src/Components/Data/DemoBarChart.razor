@using ApexCharts
@using DashboardPOC.Interfaces
@using Color = MudBlazor.Color
@using LabelPosition = ApexCharts.LabelPosition
@inject IOrderService OrderService

@if (Group1OrderData == null || Group2OrderData == null)
{
    <MudPaper Outlined="true" Elevation="2">
        <MudProgressCircular Color="Color.Default" Indeterminate="true"
                             Class="object-center" />
    </MudPaper>
}
else
{
    <MudPaper Outlined="true" Elevation="2">
        <MudText Class="ma-4">@Title</MudText>
        <div class="mx-2 my-4">
            <ApexChart TItem="IDataValue" Options="options"
                       XAxisType="XAxisType.Category">

                <ApexPointSeries TItem="IDataValue"
                                 Items="Group1OrderData"
                                 SeriesType="SeriesType.Bar"
                                 Name="Group 1"
                                 XValue="@(e => e.Name)"
                                 YValue="@(e => e.Value)"
                                 OrderByDescending="@(e => e.X)" />

                <ApexPointSeries TItem="IDataValue"
                                 Items="Group2OrderData"
                                 SeriesType="SeriesType.Bar"
                                 Name="Group 2"
                                 XValue="@(e => e.Name)"
                                 YValue="@(e => e.Value)"
                                 OrderByDescending="@(e => e.X)" />

            </ApexChart>
        </div>
    </MudPaper>
}

@code {

    private List<IDataValue> Group1OrderData { get; set; }
    private List<IDataValue> Group2OrderData { get; set; }

    private ApexChartOptions<IDataValue> options = new()
    {
        Theme = new ()
        {
            Mode = Mode.Light,
            Palette = PaletteType.Palette1
        },
        Annotations = new ()
        {
            Xaxis =
            [
                new ()
                {
                    X = 100,
                    BorderWidth = 2,
                    BorderColor = Colors.Yellow.Default,
                    StrokeDashArray = 5
                }
            ]
        },
        PlotOptions = new ()
        {
            Bar = new ()
            {
                Horizontal = true
            }
        },
        Legend = new ()
        {
            Position = LegendPosition.Bottom
        }
    };

    [Parameter]
    public string Title { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(Random.Shared.Next(500, 2000));

        Group1OrderData = OrderService.GetOrders();
        Group2OrderData = OrderService.GetOrders();
    }
}
